name: db-design
services:
  mongodb:
    image: mongo:latest
    container_name: db-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      - TZ=Asia/Bangkok
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DB=${MONGO_DB}
    volumes:
      - mongodb_data:/data/db
      # - mongodb_config:/data/configdb
      - ./_entrypoint/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    networks:
      - pf-net
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
    # command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    # healthcheck:
    #   test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
    #   interval: 5s
    #   timeout: 30s
    #   start_period: 0s
    #   start_interval: 1s
    #   retries: 30

  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongodb
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@db-mongodb:27017/
      - ME_CONFIG_BASICAUTH=false
    networks:
      - pf-net

volumes:
  mongodb_data:
networks:
  pf-net:
